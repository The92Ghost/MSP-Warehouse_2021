<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>